import sys
sys.path.insert(0, '../CRYPTO_SVYZKI')

import ast
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart
from aiogram.dispatcher.filters import Text
from aiogram.types import CallbackQuery
from aiogram.utils.deep_linking import decode_payload
from aiogram.types import Message
from keyboards.profile_keyboard import get_button_profile
import random
#==================================================
from loader import bot, dp , db
#==================================================


@dp.message_handler(text_contains="üë§–ü—Ä–æ—Ñ–∏–ª—å",state="*")
async def start(msg : types.Message, state: FSMContext):
   await state.finish()
   user_info       = await db.get_user_info(msg.from_user.id)
   stats_subscribe = await db.full_info_subscribe(msg.from_user.id)

   if "-" not in user_info[0]:
      diapazon = "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
   else:
      diapazon = f"""<code>{user_info[0].split("-")[0]}</code> –¥–æ <code>{user_info[0].split("-")[1]}</code> %"""
   await msg.answer(f"""
üîó –ü—Ä–æ—Ñ–∏–ª—å
‚îú <b>ID</b>: <code>{msg.from_user.id}</code>
‚îú <b>Tag</b>: @{msg.from_user.username}
‚îú <b>–î–∏–∞–ø–∞–∑–æ–Ω –∞—Ä–±–∏—Ç—Ä–∞–∂–∞</b>: {diapazon}
‚îî <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>: <code>{user_info[1]}</code>

ü™¢ –ü–æ–¥–ø–∏—Å–∫–∞
‚îú <b>–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏</b>: {stats_subscribe[0]}
‚îî <b>–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ</b>: <u>{stats_subscribe[1]}</u>
""",reply_markup=await get_button_profile())




@dp.callback_query_handler(text_contains="addcrypto",state="*")
async def add_otvet(query: CallbackQuery, state: FSMContext):
    await query.answer()
    await state.set_state("add_adress")
    await query.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∫—Ä–∏–ø—Ç–æ –∞–¥—Ä–µ—Å—Å <b>TRC-20 USDT</b>\n\n–û–Ω –Ω—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –≤—ã–ø–ª–∞—Ç—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")


@dp.message_handler(text_contains="*",state="add_adress")
async def start(msg : types.Message, state: FSMContext):
   adress = msg.text
   await db.add_dress(msg.from_user.id,adress)